<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.boot.modules.admin.mapper.MpUserExamMapper">
  <resultMap id="BaseResultMap" type="com.springboot.boot.modules.admin.entity.MpUserExam">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="exam_id" jdbcType="BIGINT" property="examId" />
    <result column="question_id" jdbcType="BIGINT" property="questionId" />
    <result column="option_id" jdbcType="VARCHAR" property="optionId" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="dele_flag" jdbcType="INTEGER" property="deleFlag" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="achievement_id" jdbcType="BIGINT" property="achievementId" />
    <result column="type_exam" jdbcType="INTEGER" property="typeExam" />
    <result column="entrance_type" jdbcType="INTEGER" property="entranceType" />
    <result column="analysis_answer" jdbcType="VARCHAR" property="analysisAnswer" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, exam_id, question_id, option_id, create_user, create_time, update_user, 
    update_time, dele_flag, user_id, achievement_id, type_exam, entrance_type, analysis_answer
  </sql>
  <select id="selectByExample" parameterType="com.springboot.boot.modules.admin.entity.MpUserExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mp_user_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mp_user_exam
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mp_user_exam
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.boot.modules.admin.entity.MpUserExamExample">
    delete from mp_user_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.boot.modules.admin.entity.MpUserExam">
    insert into mp_user_exam (id, type, exam_id, 
      question_id, option_id, create_user, 
      create_time, update_user, update_time, 
      dele_flag, user_id, achievement_id, 
      type_exam, entrance_type, analysis_answer
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{examId,jdbcType=BIGINT}, 
      #{questionId,jdbcType=BIGINT}, #{optionId,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleFlag,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, #{achievementId,jdbcType=BIGINT}, 
      #{typeExam,jdbcType=INTEGER}, #{entranceType,jdbcType=INTEGER}, #{analysisAnswer,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.boot.modules.admin.entity.MpUserExam">
    insert into mp_user_exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="optionId != null">
        option_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleFlag != null">
        dele_flag,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="achievementId != null">
        achievement_id,
      </if>
      <if test="typeExam != null">
        type_exam,
      </if>
      <if test="entranceType != null">
        entrance_type,
      </if>
      <if test="analysisAnswer != null">
        analysis_answer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="optionId != null">
        #{optionId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        #{deleFlag,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="achievementId != null">
        #{achievementId,jdbcType=BIGINT},
      </if>
      <if test="typeExam != null">
        #{typeExam,jdbcType=INTEGER},
      </if>
      <if test="entranceType != null">
        #{entranceType,jdbcType=INTEGER},
      </if>
      <if test="analysisAnswer != null">
        #{analysisAnswer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.boot.modules.admin.entity.MpUserExamExample" resultType="java.lang.Long">
    select count(*) from mp_user_exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mp_user_exam
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=BIGINT},
      </if>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=BIGINT},
      </if>
      <if test="record.optionId != null">
        option_id = #{record.optionId,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleFlag != null">
        dele_flag = #{record.deleFlag,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.achievementId != null">
        achievement_id = #{record.achievementId,jdbcType=BIGINT},
      </if>
      <if test="record.typeExam != null">
        type_exam = #{record.typeExam,jdbcType=INTEGER},
      </if>
      <if test="record.entranceType != null">
        entrance_type = #{record.entranceType,jdbcType=INTEGER},
      </if>
      <if test="record.analysisAnswer != null">
        analysis_answer = #{record.analysisAnswer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mp_user_exam
    set id = #{record.id,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      exam_id = #{record.examId,jdbcType=BIGINT},
      question_id = #{record.questionId,jdbcType=BIGINT},
      option_id = #{record.optionId,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dele_flag = #{record.deleFlag,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=BIGINT},
      achievement_id = #{record.achievementId,jdbcType=BIGINT},
      type_exam = #{record.typeExam,jdbcType=INTEGER},
      entrance_type = #{record.entranceType,jdbcType=INTEGER},
      analysis_answer = #{record.analysisAnswer,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.boot.modules.admin.entity.MpUserExam">
    update mp_user_exam
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="optionId != null">
        option_id = #{optionId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        dele_flag = #{deleFlag,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="achievementId != null">
        achievement_id = #{achievementId,jdbcType=BIGINT},
      </if>
      <if test="typeExam != null">
        type_exam = #{typeExam,jdbcType=INTEGER},
      </if>
      <if test="entranceType != null">
        entrance_type = #{entranceType,jdbcType=INTEGER},
      </if>
      <if test="analysisAnswer != null">
        analysis_answer = #{analysisAnswer,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.boot.modules.admin.entity.MpUserExam">
    update mp_user_exam
    set type = #{type,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=BIGINT},
      question_id = #{questionId,jdbcType=BIGINT},
      option_id = #{optionId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dele_flag = #{deleFlag,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      achievement_id = #{achievementId,jdbcType=BIGINT},
      type_exam = #{typeExam,jdbcType=INTEGER},
      entrance_type = #{entranceType,jdbcType=INTEGER},
      analysis_answer = #{analysisAnswer,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>