<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.boot.modules.admin.mapper.MpAuthMapper">
  <resultMap id="BaseResultMap" type="com.springboot.boot.modules.admin.entity.MpAuth">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="auth_descr" jdbcType="VARCHAR" property="authDescr" />
    <result column="direction_id" jdbcType="BIGINT" property="directionId" />
    <result column="domain_id" jdbcType="BIGINT" property="domainId" />
    <result column="unit_id" jdbcType="BIGINT" property="unitId" />
    <result column="auth_level" jdbcType="INTEGER" property="authLevel" />
    <result column="exam_id" jdbcType="BIGINT" property="examId" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="auth_first_classify_id" jdbcType="BIGINT" property="authFirstClassifyId" />
    <result column="auth_sencond_classify_id" jdbcType="BIGINT" property="authSencondClassifyId" />
    <result column="certificate_time" jdbcType="TIMESTAMP" property="certificateTime" />
    <result column="certificate_type" jdbcType="INTEGER" property="certificateType" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="dele_flag" jdbcType="INTEGER" property="deleFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, auth_descr, direction_id, domain_id, unit_id, auth_level, exam_id, department_id, 
    auth_first_classify_id, auth_sencond_classify_id, certificate_time, certificate_type, 
    end_time, create_user, create_time, update_user, update_time, dele_flag
  </sql>
  <select id="selectByExample" parameterType="com.springboot.boot.modules.admin.entity.MpAuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mp_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mp_auth
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mp_auth
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.boot.modules.admin.entity.MpAuthExample">
    delete from mp_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.boot.modules.admin.entity.MpAuth">
    insert into mp_auth (id, name, auth_descr, 
      direction_id, domain_id, unit_id, 
      auth_level, exam_id, department_id, 
      auth_first_classify_id, auth_sencond_classify_id, 
      certificate_time, certificate_type, end_time, 
      create_user, create_time, update_user, 
      update_time, dele_flag)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{authDescr,jdbcType=VARCHAR}, 
      #{directionId,jdbcType=BIGINT}, #{domainId,jdbcType=BIGINT}, #{unitId,jdbcType=BIGINT}, 
      #{authLevel,jdbcType=INTEGER}, #{examId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, 
      #{authFirstClassifyId,jdbcType=BIGINT}, #{authSencondClassifyId,jdbcType=BIGINT}, 
      #{certificateTime,jdbcType=TIMESTAMP}, #{certificateType,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.boot.modules.admin.entity.MpAuth">
    insert into mp_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="authDescr != null">
        auth_descr,
      </if>
      <if test="directionId != null">
        direction_id,
      </if>
      <if test="domainId != null">
        domain_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="authLevel != null">
        auth_level,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="authFirstClassifyId != null">
        auth_first_classify_id,
      </if>
      <if test="authSencondClassifyId != null">
        auth_sencond_classify_id,
      </if>
      <if test="certificateTime != null">
        certificate_time,
      </if>
      <if test="certificateType != null">
        certificate_type,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleFlag != null">
        dele_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="authDescr != null">
        #{authDescr,jdbcType=VARCHAR},
      </if>
      <if test="directionId != null">
        #{directionId,jdbcType=BIGINT},
      </if>
      <if test="domainId != null">
        #{domainId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="authLevel != null">
        #{authLevel,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="authFirstClassifyId != null">
        #{authFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="authSencondClassifyId != null">
        #{authSencondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="certificateTime != null">
        #{certificateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificateType != null">
        #{certificateType,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        #{deleFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.boot.modules.admin.entity.MpAuthExample" resultType="java.lang.Long">
    select count(*) from mp_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mp_auth
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.authDescr != null">
        auth_descr = #{record.authDescr,jdbcType=VARCHAR},
      </if>
      <if test="record.directionId != null">
        direction_id = #{record.directionId,jdbcType=BIGINT},
      </if>
      <if test="record.domainId != null">
        domain_id = #{record.domainId,jdbcType=BIGINT},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=BIGINT},
      </if>
      <if test="record.authLevel != null">
        auth_level = #{record.authLevel,jdbcType=INTEGER},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=BIGINT},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.authFirstClassifyId != null">
        auth_first_classify_id = #{record.authFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="record.authSencondClassifyId != null">
        auth_sencond_classify_id = #{record.authSencondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="record.certificateTime != null">
        certificate_time = #{record.certificateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.certificateType != null">
        certificate_type = #{record.certificateType,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleFlag != null">
        dele_flag = #{record.deleFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mp_auth
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      auth_descr = #{record.authDescr,jdbcType=VARCHAR},
      direction_id = #{record.directionId,jdbcType=BIGINT},
      domain_id = #{record.domainId,jdbcType=BIGINT},
      unit_id = #{record.unitId,jdbcType=BIGINT},
      auth_level = #{record.authLevel,jdbcType=INTEGER},
      exam_id = #{record.examId,jdbcType=BIGINT},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      auth_first_classify_id = #{record.authFirstClassifyId,jdbcType=BIGINT},
      auth_sencond_classify_id = #{record.authSencondClassifyId,jdbcType=BIGINT},
      certificate_time = #{record.certificateTime,jdbcType=TIMESTAMP},
      certificate_type = #{record.certificateType,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dele_flag = #{record.deleFlag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.boot.modules.admin.entity.MpAuth">
    update mp_auth
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="authDescr != null">
        auth_descr = #{authDescr,jdbcType=VARCHAR},
      </if>
      <if test="directionId != null">
        direction_id = #{directionId,jdbcType=BIGINT},
      </if>
      <if test="domainId != null">
        domain_id = #{domainId,jdbcType=BIGINT},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="authLevel != null">
        auth_level = #{authLevel,jdbcType=INTEGER},
      </if>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="authFirstClassifyId != null">
        auth_first_classify_id = #{authFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="authSencondClassifyId != null">
        auth_sencond_classify_id = #{authSencondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="certificateTime != null">
        certificate_time = #{certificateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="certificateType != null">
        certificate_type = #{certificateType,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        dele_flag = #{deleFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.boot.modules.admin.entity.MpAuth">
    update mp_auth
    set name = #{name,jdbcType=VARCHAR},
      auth_descr = #{authDescr,jdbcType=VARCHAR},
      direction_id = #{directionId,jdbcType=BIGINT},
      domain_id = #{domainId,jdbcType=BIGINT},
      unit_id = #{unitId,jdbcType=BIGINT},
      auth_level = #{authLevel,jdbcType=INTEGER},
      exam_id = #{examId,jdbcType=BIGINT},
      department_id = #{departmentId,jdbcType=BIGINT},
      auth_first_classify_id = #{authFirstClassifyId,jdbcType=BIGINT},
      auth_sencond_classify_id = #{authSencondClassifyId,jdbcType=BIGINT},
      certificate_time = #{certificateTime,jdbcType=TIMESTAMP},
      certificate_type = #{certificateType,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dele_flag = #{deleFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>