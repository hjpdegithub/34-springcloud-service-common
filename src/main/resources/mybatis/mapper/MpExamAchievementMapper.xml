<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.boot.modules.admin.mapper.MpExamAchievementMapper">
  <resultMap id="BaseResultMap" type="com.springboot.boot.modules.admin.entity.MpExamAchievement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="exam_id" jdbcType="BIGINT" property="examId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="exam_time" jdbcType="INTEGER" property="examTime" />
    <result column="exam_achievement" jdbcType="INTEGER" property="examAchievement" />
    <result column="crate_user" jdbcType="BIGINT" property="crateUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_tiime" jdbcType="TIMESTAMP" property="updateTiime" />
    <result column="dele_flag" jdbcType="INTEGER" property="deleFlag" />
    <result column="if_whether" jdbcType="INTEGER" property="ifWhether" />
    <result column="judge_grade" jdbcType="INTEGER" property="judgeGrade" />
    <result column="single_grade" jdbcType="INTEGER" property="singleGrade" />
    <result column="multiple_grade" jdbcType="INTEGER" property="multipleGrade" />
    <result column="analysis_grade" jdbcType="INTEGER" property="analysisGrade" />
    <result column="count_grade" jdbcType="INTEGER" property="countGrade" />
    <result column="show_type" jdbcType="INTEGER" property="showType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, exam_id, user_id, type, exam_time, exam_achievement, crate_user, create_time, 
    update_user, update_tiime, dele_flag, if_whether, judge_grade, single_grade, multiple_grade, 
    analysis_grade, count_grade, show_type
  </sql>
  <select id="selectByExample" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievementExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mp_exam_achievement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mp_exam_achievement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mp_exam_achievement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievementExample">
    delete from mp_exam_achievement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievement">
    insert into mp_exam_achievement (id, exam_id, user_id, 
      type, exam_time, exam_achievement, 
      crate_user, create_time, update_user, 
      update_tiime, dele_flag, if_whether, 
      judge_grade, single_grade, multiple_grade, 
      analysis_grade, count_grade, show_type
      )
    values (#{id,jdbcType=BIGINT}, #{examId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{type,jdbcType=INTEGER}, #{examTime,jdbcType=INTEGER}, #{examAchievement,jdbcType=INTEGER}, 
      #{crateUser,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, 
      #{updateTiime,jdbcType=TIMESTAMP}, #{deleFlag,jdbcType=INTEGER}, #{ifWhether,jdbcType=INTEGER}, 
      #{judgeGrade,jdbcType=INTEGER}, #{singleGrade,jdbcType=INTEGER}, #{multipleGrade,jdbcType=INTEGER}, 
      #{analysisGrade,jdbcType=INTEGER}, #{countGrade,jdbcType=INTEGER}, #{showType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievement">
    insert into mp_exam_achievement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="examId != null">
        exam_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="examTime != null">
        exam_time,
      </if>
      <if test="examAchievement != null">
        exam_achievement,
      </if>
      <if test="crateUser != null">
        crate_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTiime != null">
        update_tiime,
      </if>
      <if test="deleFlag != null">
        dele_flag,
      </if>
      <if test="ifWhether != null">
        if_whether,
      </if>
      <if test="judgeGrade != null">
        judge_grade,
      </if>
      <if test="singleGrade != null">
        single_grade,
      </if>
      <if test="multipleGrade != null">
        multiple_grade,
      </if>
      <if test="analysisGrade != null">
        analysis_grade,
      </if>
      <if test="countGrade != null">
        count_grade,
      </if>
      <if test="showType != null">
        show_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="examId != null">
        #{examId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="examTime != null">
        #{examTime,jdbcType=INTEGER},
      </if>
      <if test="examAchievement != null">
        #{examAchievement,jdbcType=INTEGER},
      </if>
      <if test="crateUser != null">
        #{crateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTiime != null">
        #{updateTiime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        #{deleFlag,jdbcType=INTEGER},
      </if>
      <if test="ifWhether != null">
        #{ifWhether,jdbcType=INTEGER},
      </if>
      <if test="judgeGrade != null">
        #{judgeGrade,jdbcType=INTEGER},
      </if>
      <if test="singleGrade != null">
        #{singleGrade,jdbcType=INTEGER},
      </if>
      <if test="multipleGrade != null">
        #{multipleGrade,jdbcType=INTEGER},
      </if>
      <if test="analysisGrade != null">
        #{analysisGrade,jdbcType=INTEGER},
      </if>
      <if test="countGrade != null">
        #{countGrade,jdbcType=INTEGER},
      </if>
      <if test="showType != null">
        #{showType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievementExample" resultType="java.lang.Long">
    select count(*) from mp_exam_achievement
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mp_exam_achievement
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.examId != null">
        exam_id = #{record.examId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.examTime != null">
        exam_time = #{record.examTime,jdbcType=INTEGER},
      </if>
      <if test="record.examAchievement != null">
        exam_achievement = #{record.examAchievement,jdbcType=INTEGER},
      </if>
      <if test="record.crateUser != null">
        crate_user = #{record.crateUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTiime != null">
        update_tiime = #{record.updateTiime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleFlag != null">
        dele_flag = #{record.deleFlag,jdbcType=INTEGER},
      </if>
      <if test="record.ifWhether != null">
        if_whether = #{record.ifWhether,jdbcType=INTEGER},
      </if>
      <if test="record.judgeGrade != null">
        judge_grade = #{record.judgeGrade,jdbcType=INTEGER},
      </if>
      <if test="record.singleGrade != null">
        single_grade = #{record.singleGrade,jdbcType=INTEGER},
      </if>
      <if test="record.multipleGrade != null">
        multiple_grade = #{record.multipleGrade,jdbcType=INTEGER},
      </if>
      <if test="record.analysisGrade != null">
        analysis_grade = #{record.analysisGrade,jdbcType=INTEGER},
      </if>
      <if test="record.countGrade != null">
        count_grade = #{record.countGrade,jdbcType=INTEGER},
      </if>
      <if test="record.showType != null">
        show_type = #{record.showType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mp_exam_achievement
    set id = #{record.id,jdbcType=BIGINT},
      exam_id = #{record.examId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      exam_time = #{record.examTime,jdbcType=INTEGER},
      exam_achievement = #{record.examAchievement,jdbcType=INTEGER},
      crate_user = #{record.crateUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_tiime = #{record.updateTiime,jdbcType=TIMESTAMP},
      dele_flag = #{record.deleFlag,jdbcType=INTEGER},
      if_whether = #{record.ifWhether,jdbcType=INTEGER},
      judge_grade = #{record.judgeGrade,jdbcType=INTEGER},
      single_grade = #{record.singleGrade,jdbcType=INTEGER},
      multiple_grade = #{record.multipleGrade,jdbcType=INTEGER},
      analysis_grade = #{record.analysisGrade,jdbcType=INTEGER},
      count_grade = #{record.countGrade,jdbcType=INTEGER},
      show_type = #{record.showType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievement">
    update mp_exam_achievement
    <set>
      <if test="examId != null">
        exam_id = #{examId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="examTime != null">
        exam_time = #{examTime,jdbcType=INTEGER},
      </if>
      <if test="examAchievement != null">
        exam_achievement = #{examAchievement,jdbcType=INTEGER},
      </if>
      <if test="crateUser != null">
        crate_user = #{crateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTiime != null">
        update_tiime = #{updateTiime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        dele_flag = #{deleFlag,jdbcType=INTEGER},
      </if>
      <if test="ifWhether != null">
        if_whether = #{ifWhether,jdbcType=INTEGER},
      </if>
      <if test="judgeGrade != null">
        judge_grade = #{judgeGrade,jdbcType=INTEGER},
      </if>
      <if test="singleGrade != null">
        single_grade = #{singleGrade,jdbcType=INTEGER},
      </if>
      <if test="multipleGrade != null">
        multiple_grade = #{multipleGrade,jdbcType=INTEGER},
      </if>
      <if test="analysisGrade != null">
        analysis_grade = #{analysisGrade,jdbcType=INTEGER},
      </if>
      <if test="countGrade != null">
        count_grade = #{countGrade,jdbcType=INTEGER},
      </if>
      <if test="showType != null">
        show_type = #{showType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.boot.modules.admin.entity.MpExamAchievement">
    update mp_exam_achievement
    set exam_id = #{examId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      exam_time = #{examTime,jdbcType=INTEGER},
      exam_achievement = #{examAchievement,jdbcType=INTEGER},
      crate_user = #{crateUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_tiime = #{updateTiime,jdbcType=TIMESTAMP},
      dele_flag = #{deleFlag,jdbcType=INTEGER},
      if_whether = #{ifWhether,jdbcType=INTEGER},
      judge_grade = #{judgeGrade,jdbcType=INTEGER},
      single_grade = #{singleGrade,jdbcType=INTEGER},
      multiple_grade = #{multipleGrade,jdbcType=INTEGER},
      analysis_grade = #{analysisGrade,jdbcType=INTEGER},
      count_grade = #{countGrade,jdbcType=INTEGER},
      show_type = #{showType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>