<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.boot.modules.admin.mapper.MpCurriculumMapper">
  <resultMap id="BaseResultMap" type="com.springboot.boot.modules.admin.entity.MpCurriculum">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="curriculum_name" jdbcType="VARCHAR" property="curriculumName" />
    <result column="gen_first_classify_id" jdbcType="BIGINT" property="genFirstClassifyId" />
    <result column="gen_second_classify_id" jdbcType="BIGINT" property="genSecondClassifyId" />
    <result column="study_time" jdbcType="TIMESTAMP" property="studyTime" />
    <result column="class_hour" jdbcType="INTEGER" property="classHour" />
    <result column="class_format" jdbcType="INTEGER" property="classFormat" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="apply_type" jdbcType="INTEGER" property="applyType" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="customized_type" jdbcType="INTEGER" property="customizedType" />
    <result column="cust_first_classify_id" jdbcType="BIGINT" property="custFirstClassifyId" />
    <result column="cust_second_classify_id" jdbcType="BIGINT" property="custSecondClassifyId" />
    <result column="open_class_type" jdbcType="INTEGER" property="openClassType" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="dele_flag" jdbcType="INTEGER" property="deleFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, curriculum_name, gen_first_classify_id, gen_second_classify_id, study_time, class_hour, 
    class_format, author_name, apply_type, num, customized_type, cust_first_classify_id, 
    cust_second_classify_id, open_class_type, create_user, create_time, update_user, 
    update_time, dele_flag
  </sql>
  <select id="selectByExample" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mp_curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mp_curriculum
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mp_curriculum
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculumExample">
    delete from mp_curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculum">
    insert into mp_curriculum (id, curriculum_name, gen_first_classify_id, 
      gen_second_classify_id, study_time, class_hour, 
      class_format, author_name, apply_type, 
      num, customized_type, cust_first_classify_id, 
      cust_second_classify_id, open_class_type, create_user, 
      create_time, update_user, update_time, 
      dele_flag)
    values (#{id,jdbcType=BIGINT}, #{curriculumName,jdbcType=VARCHAR}, #{genFirstClassifyId,jdbcType=BIGINT}, 
      #{genSecondClassifyId,jdbcType=BIGINT}, #{studyTime,jdbcType=TIMESTAMP}, #{classHour,jdbcType=INTEGER}, 
      #{classFormat,jdbcType=INTEGER}, #{authorName,jdbcType=VARCHAR}, #{applyType,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{customizedType,jdbcType=INTEGER}, #{custFirstClassifyId,jdbcType=BIGINT}, 
      #{custSecondClassifyId,jdbcType=BIGINT}, #{openClassType,jdbcType=INTEGER}, #{createUser,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{deleFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculum">
    insert into mp_curriculum
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="curriculumName != null">
        curriculum_name,
      </if>
      <if test="genFirstClassifyId != null">
        gen_first_classify_id,
      </if>
      <if test="genSecondClassifyId != null">
        gen_second_classify_id,
      </if>
      <if test="studyTime != null">
        study_time,
      </if>
      <if test="classHour != null">
        class_hour,
      </if>
      <if test="classFormat != null">
        class_format,
      </if>
      <if test="authorName != null">
        author_name,
      </if>
      <if test="applyType != null">
        apply_type,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="customizedType != null">
        customized_type,
      </if>
      <if test="custFirstClassifyId != null">
        cust_first_classify_id,
      </if>
      <if test="custSecondClassifyId != null">
        cust_second_classify_id,
      </if>
      <if test="openClassType != null">
        open_class_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleFlag != null">
        dele_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="curriculumName != null">
        #{curriculumName,jdbcType=VARCHAR},
      </if>
      <if test="genFirstClassifyId != null">
        #{genFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="genSecondClassifyId != null">
        #{genSecondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="studyTime != null">
        #{studyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classHour != null">
        #{classHour,jdbcType=INTEGER},
      </if>
      <if test="classFormat != null">
        #{classFormat,jdbcType=INTEGER},
      </if>
      <if test="authorName != null">
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="customizedType != null">
        #{customizedType,jdbcType=INTEGER},
      </if>
      <if test="custFirstClassifyId != null">
        #{custFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="custSecondClassifyId != null">
        #{custSecondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="openClassType != null">
        #{openClassType,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        #{deleFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculumExample" resultType="java.lang.Long">
    select count(*) from mp_curriculum
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mp_curriculum
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.curriculumName != null">
        curriculum_name = #{record.curriculumName,jdbcType=VARCHAR},
      </if>
      <if test="record.genFirstClassifyId != null">
        gen_first_classify_id = #{record.genFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="record.genSecondClassifyId != null">
        gen_second_classify_id = #{record.genSecondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="record.studyTime != null">
        study_time = #{record.studyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.classHour != null">
        class_hour = #{record.classHour,jdbcType=INTEGER},
      </if>
      <if test="record.classFormat != null">
        class_format = #{record.classFormat,jdbcType=INTEGER},
      </if>
      <if test="record.authorName != null">
        author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null">
        apply_type = #{record.applyType,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.customizedType != null">
        customized_type = #{record.customizedType,jdbcType=INTEGER},
      </if>
      <if test="record.custFirstClassifyId != null">
        cust_first_classify_id = #{record.custFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="record.custSecondClassifyId != null">
        cust_second_classify_id = #{record.custSecondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="record.openClassType != null">
        open_class_type = #{record.openClassType,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleFlag != null">
        dele_flag = #{record.deleFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mp_curriculum
    set id = #{record.id,jdbcType=BIGINT},
      curriculum_name = #{record.curriculumName,jdbcType=VARCHAR},
      gen_first_classify_id = #{record.genFirstClassifyId,jdbcType=BIGINT},
      gen_second_classify_id = #{record.genSecondClassifyId,jdbcType=BIGINT},
      study_time = #{record.studyTime,jdbcType=TIMESTAMP},
      class_hour = #{record.classHour,jdbcType=INTEGER},
      class_format = #{record.classFormat,jdbcType=INTEGER},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      apply_type = #{record.applyType,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      customized_type = #{record.customizedType,jdbcType=INTEGER},
      cust_first_classify_id = #{record.custFirstClassifyId,jdbcType=BIGINT},
      cust_second_classify_id = #{record.custSecondClassifyId,jdbcType=BIGINT},
      open_class_type = #{record.openClassType,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      dele_flag = #{record.deleFlag,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculum">
    update mp_curriculum
    <set>
      <if test="curriculumName != null">
        curriculum_name = #{curriculumName,jdbcType=VARCHAR},
      </if>
      <if test="genFirstClassifyId != null">
        gen_first_classify_id = #{genFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="genSecondClassifyId != null">
        gen_second_classify_id = #{genSecondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="studyTime != null">
        study_time = #{studyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="classHour != null">
        class_hour = #{classHour,jdbcType=INTEGER},
      </if>
      <if test="classFormat != null">
        class_format = #{classFormat,jdbcType=INTEGER},
      </if>
      <if test="authorName != null">
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="customizedType != null">
        customized_type = #{customizedType,jdbcType=INTEGER},
      </if>
      <if test="custFirstClassifyId != null">
        cust_first_classify_id = #{custFirstClassifyId,jdbcType=BIGINT},
      </if>
      <if test="custSecondClassifyId != null">
        cust_second_classify_id = #{custSecondClassifyId,jdbcType=BIGINT},
      </if>
      <if test="openClassType != null">
        open_class_type = #{openClassType,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleFlag != null">
        dele_flag = #{deleFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.boot.modules.admin.entity.MpCurriculum">
    update mp_curriculum
    set curriculum_name = #{curriculumName,jdbcType=VARCHAR},
      gen_first_classify_id = #{genFirstClassifyId,jdbcType=BIGINT},
      gen_second_classify_id = #{genSecondClassifyId,jdbcType=BIGINT},
      study_time = #{studyTime,jdbcType=TIMESTAMP},
      class_hour = #{classHour,jdbcType=INTEGER},
      class_format = #{classFormat,jdbcType=INTEGER},
      author_name = #{authorName,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      customized_type = #{customizedType,jdbcType=INTEGER},
      cust_first_classify_id = #{custFirstClassifyId,jdbcType=BIGINT},
      cust_second_classify_id = #{custSecondClassifyId,jdbcType=BIGINT},
      open_class_type = #{openClassType,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dele_flag = #{deleFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>